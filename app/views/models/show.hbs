<div class="col-sm-12">
    <div class="single-photo">


        <script src="/js/babylon.custom.js"></script>
        <div class="canvasmodel">
            <canvas id="renderCanvas" width="300" height="300" touch-action="none"></canvas>
        </div>
        <script>

            var canvas = document.getElementById("renderCanvas"); // Get the canvas element

            var engine = new BABYLON.Engine(canvas, true); // Generate the BABYLON 3D engine


            /******* Add the create scene function ******/
            var createScene = function () {

                // Create the scene space
                var scene = new BABYLON.Scene(engine);

                // Add a camera to the scene and attach it to the canvas
                var camera = new BABYLON.ArcRotateCamera("Camera", Math.PI / 2, Math.PI / 2, 2, BABYLON.Vector3.Zero(), scene);
                camera.attachControl(canvas, true);

                // Add lights to the scene
                var light1 = new BABYLON.HemisphericLight("light1", new BABYLON.Vector3(1, 1, 0), scene);
                var light2 = new BABYLON.PointLight("light2", new BABYLON.Vector3(0, 1, -1), scene);


                // Add and manipulate meshes in the scene
                //var sphere = BABYLON.MeshBuilder.CreateSphere("sphere", {diameter:2}, scene);

                BABYLON.SceneLoader.Append("/models/", '{{image.url2}}', scene, function (scene) {


                    // do something with the scene
                    var model = scene.meshes[0];
                    var maxRadius = 0;

                    var x = 0;
                    var y = 0;
                    var z = 0;

                    for (var i = 0; i < scene.meshes.length; i++) {
                        /*scene.meshes[i].showBoundingBox = true;*/
                        x = x + scene.meshes[i].getBoundingInfo().boundingBox.centerWorld.x;
                        y = y + scene.meshes[i].getBoundingInfo().boundingBox.centerWorld.y;
                        z = z + scene.meshes[i].getBoundingInfo().boundingBox.centerWorld.z;
                    }
                    var modelCenter = new BABYLON.Vector3(x / scene.meshes.length, y / scene.meshes.length, z / scene.meshes.length);
                    camera.setTarget(modelCenter);

                    var maxX = 0;
                    var maxY = 0;
                    var maxZ = 0;

                    var vec = new BABYLON.Vector3(0, 0, 0);

                    for (var i = 0; i < scene.meshes.length; i++) {
                        var dist = scene.meshes[i].getBoundingInfo().boundingBox.maximumWorld.length();
                        if (dist != Infinity)
                            if (vec.length() < dist)
                                vec = scene.meshes[i].getBoundingInfo().boundingBox.maximumWorld;
                    }
                    var r = vec.length();
                    console.log(r);
                    console.log(500);
                    //camera.radius = r / 6;


                    let radius = r;
                    let aspectRatio = engine.getAspectRatio(camera);
                    let halfMinFov = camera.fov / 2;
                    if (aspectRatio < 1) {
                        halfMinFov = Math.atan(aspectRatio * Math.tan(camera.fov / 2));
                    }
                    let viewRadius = Math.abs(radius / Math.sin(halfMinFov));
                    camera.radius = viewRadius;
                    camera.rotation = new BABYLON.Vector3(0, 45, 0);
                    console.log(camera.radius);
                   /* camera.setPosition(new BABYLON.Vector3(-260, 330, viewRadius));*/


                });


                /* */

                return scene;
            };

            /******* End of the create scene function ******/

            var scene = createScene(); //Call the createScene function

            engine.runRenderLoop(function () { // Register a render loop to repeatedly render the scene
                scene.render();
            });


            window.addEventListener("resize", function () { // Watch for browser/canvas resize events
                engine.resize();
            });
        </script>


    </div>
</div>